{{/*
	Trigger: (?:[^<]|\A)https://(?:\w+\.)?discord(?:app)?\.com/channels\/(\d+)\/(\d+)\/(\d+)(?:[^>\d]|\z)
	Trigger Type: Regex

	Usage:
	Right click on a message to copy the message link and send it in chat.

	Copyright (c): Black Wolf, 2021
	License: MIT
	Repository: https://github.com/BlackWolfWoof/yagpdb-cc/
*/}}

{{$m := reFindAllSubmatches `(?i)https://(?:\w+\.)?discord(?:app)?\.com/channels\/(\d+)\/(\d+)\/(\d+)` .Message.Content}}{{$reminder := true}}
{{if not (eq (toInt64 (index $m 0 1)) .Guild.ID)}}
	{{sendMessage nil (cembed
		"author" (sdict
			"name" "Unknown User"
			"icon_url" "https://i.imgur.com/jNz2Dwp.png")
		"description" (print "\n\n**[Message](" (index $m 0 0) "/) in <#" (index $m 0 2) ">**\n" "<:excl:565142262401728512> Unknown Message")
		"color" 0xF04747
		"footer" (sdict
			"text" (print "Command triggered by " .Message.Author.String ". Message from"))
		"timestamp" (div (index $m 0 3) 4194304 | mult 1000000 | toDuration | .DiscordEpoch.Add))}}
{{else}}
	{{$msg := getMessage (index $m 0 2) (index $m 0 3)}}
	{{if not $msg}}
		{{sendMessage nil (cembed "title" "Something broke :(" "color" 0xDD2E44 "description" "<:cross:705738821110595607>OOPS! The message you are trying to quote doesn't exist!\nCheck if the channel and message exists.")}}
	{{else}}
		{{$content := $msg.Content}}
		{{$mc := reReplace `(?:https?://)?(?:www\.)?(discord(?:app)?\.gg(?:/|\\+/+)|discord(?:app)?\.com(?:/|\\+/+)(?:invite/))\w{2,}|(?:https?://)?(?:www\.)?(?:discord(?:app)?\.(?:io|me|li)|invite\.gg|dsc\.gg|top\.gg\/servers|discordservers\.com\/(?:server|bump))(?:/|\\+/+)[A-z+0-9]{2,}` $msg.Content "[Invite Removed](https://example.com/)"}}
		{{$e := sdict
			"author" (sdict
				"name" (print $msg.Author.String " (ID " $msg.Author.ID ")")
				"icon_url" ($msg.Author.AvatarURL "1024"))
			"color" 0x36393F
			"footer" (sdict
				"text" (print "Command triggered by " .User.String ". Message from"))
			"timestamp" $msg.Timestamp}}

		{{/*Anti overflow embed*/}}
		{{$fields := cslice}}{{$desc := ""}}
		{{if gt (len $mc) 2000}}
			{{$cslice := reFindAll `.{1,1000}` $mc}}
			{{/*Split into umtiple fields*/}}
			{{range $num, $text := $cslice}}{{if eq $num 0 1}}{{$desc = print $desc $text}}{{else}}{{$fields = $fields.Append (sdict "name" "\u200B" "value" $text "inline" false)}}{{end}}{{end}}
			{{$fields = $fields.Append (sdict "name" "\u200B" "value" (print "\n\n**[Message](" (index $m 0 0) ") in <#" $msg.ChannelID ">**") "inline" false)}}
			{{$e.Set "fields" $fields}}
		{{else}}
			{{$desc = (print "\n\n**[Message](" (index $m 0 0) ") in <#" $msg.ChannelID ">**\n" $mc)}}
		{{end}}

		{{if and $msg.Content (not $msg.Embeds)}}
			{{$e.Set "description" $desc}}
		{{end}}
		{{$fo := $e.footer}}
		{{$ti := $msg.Timestamp}}
		{{if or $msg.Attachments $msg.Embeds}}
			{{range $c,$ma := (or $msg.Attachments $msg.Embeds)}}
				{{$filename := ""}}{{$count := ""}}
				{{if eq (printf "%T" .) "*discordgo.MessageAttachment"}}
					{{$filename = .Filename}}{{$count = len $msg.Attachments}}
				{{else if eq (printf "%T" .) "*discordgo.MessageEmbed"}}
					{{if eq .Type "image"}}
						{{$filename = .URL}}{{$count = len $msg.Embeds}}
					{{end}}
				{{end}}
				{{if ne $filename ""}}
					{{$e.Del "footer"}}
					{{$e.Del "timestamp"}}
					{{if eq $c 0}}
						{{$e.Set "description" $desc}}
					{{end}}
					{{if eq $count (add $c 1)}}
						{{$e.Set "footer" $fo}}
						{{$e.Set "timestamp" $ti}}
					{{end}}
					{{if (reFind `(?i)\.(jpg|jpeg|png|gif|tif|tiff|webp)` $filename)}}
						{{$e.Set "image" (sdict "url" .URL)}}
						{{sendMessage nil (cembed $e)}}
					{{else}}
						{{$fields = $fields.AppendSlice (cslice
							(sdict "name" "File Name" "value" (print "`" $filename "`") "inline" true)
							(sdict "name" "URL" "value" (print "[File Link](" .URL ")") "inline" true))}}
						{{$e.Set "fields" $fields}}
						{{sendMessage nil (cembed $e)}}
					{{end}}
					{{$e.Del "fields"}}
					{{$e.Del "image"}}
					{{$e.Del "description"}}
					{{$e.Del "author"}}
					{{$reminder = false}}{{$content = ""}}
				{{end}}
			{{end}}
		{{else}}
			{{if and $msg.Content (not $msg.Embeds)}}
				{{sendMessage nil (cembed $e)}}
			{{end}}
		{{end}}
		{{if $msg.Embeds}}
			{{if $reminder}}{{$msg2 := sdict}}
				{{if eq (index $msg.Embeds 0).Type "rich"}}
					{{$embed2 := index $msg.Embeds 0}}
					{{$msg2 = sdict "embed" $embed2 "content" $content}}
				{{else if ne (index $msg.Embeds 0).Type "image"}}
					{{$msg2.Set "content" $mc}}
				{{end}}

				{{$mentions := reFindAll `<@!?\d{17,19}>` $msg2.content}}{{$content2 := reSplit `<@!?\d{17,19}>` $msg2.content}}{{$msg2.Set "content" ""}}
				{{range $i, $u := $mentions}}{{$tmp := ""}}
					{{- $uStr := ""}}{{range $msg.Mentions}}{{if in $u (str .ID)}}{{$uStr = print "@" .String}}{{end}}{{end}}
					{{- if not $uStr}}{{with getMember $u}}{{$uStr = print "@" .User.String}}{{else}}{{$uStr = $u}}{{end}}{{end}}
					{{- $msg2.Set "content" (print $msg2.content (index $content2 $i) $uStr) -}}
				{{end}}

				{{$msg2.Set "content" (print $msg2.content (len $content2|add -1|index $content2))}}
				{{$e.Set "description" (print "**[Embed Link](" (index $m 0 0) ") to <#" $msg.ChannelID ">**")}}
				{{sendMessage nil (complexMessage $msg2)}}{{sendMessage nil (cembed $e)}}
			{{end}}
		{{end}}
		{{if and (eq (len (index $m 0 0)) (len .Message.Content)) (not .Message.Attachments)}}
			{{deleteTrigger 1}}
		{{end}}
	{{end}}
{{end}}
